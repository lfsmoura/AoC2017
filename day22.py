ex = """..#
#..
..."""

inp = """.#...#.#.##..##....##.#.#
###.###..##...##.##....##
....#.###..#...#####..#.#
.##.######..###.##..#...#
#..#..#..##..###...#..###
..####...#.##.#.#.##.####
#......#..####..###..###.
#####.##.#.#.##.###.#.#.#
.#.###....###....##....##
.......########.#.#...#..
...###.####.##..###.##..#
#.#.###.####.###.###.###.
.######...###.....#......
....##.###..#.#.###...##.
#.###..###.#.#.##.#.##.##
#.#.#..###...###.###.....
##..##.##...##.##..##.#.#
.....##......##..#.##...#
..##.#.###.#...#####.#.##
....##..#.#.#.#..###.#..#
###..##.##....##.#....##.
#..####...####.#.##..#.##
####.###...####..##.#.#.#
#.#.#.###.....###.##.###.
.#...##.#.##..###.#.###.."""

from collections import defaultdict

def virus(board, bursts=10000):
    m = defaultdict(bool)
    for i, line in enumerate(board.split("\n")):
        for j, char in enumerate(list(line)):
            m[(j,i)] = char == "#"
    
    y, x = i // 2, j // 2
    
    dirs = [(0,-1), (-1,0), (0,1), (1,0)]
    dir = 0
    inf = 0
    while bursts > 0:
        print(x, y, m[(x,y)], dirs[dir], inf)
        bursts -= 1
        if m[(x,y)]:
            dir = (dir - 1) % 4
        else:
            inf += 1
            dir = (dir + 1) % 4
        m[(x,y)] = not m[(x,y)]
        x += dirs[dir][0]
        y += dirs[dir][1]

    print(inf)
    return inf


assert virus(ex, 7) == 5
assert virus(ex, 70) == 41
assert virus(ex) == 5587

print(virus(inp))